#include <Servo.h>
#include <AccelStepper.h>

Servo servo1;
Servo servo2;
Servo servo3;

#define dir1 4 // Motor 1 direction, pin 2 doesnt work on MEGA
#define pul1 3 // Motor 1 pulse 
#define dir2 6 
#define pul2 7

AccelStepper stepper1(1, pul1, dir1);
AccelStepper stepper2(1, pul2, dir2);

bool xLocationStatus = false;
bool yLocationStatus = false;
bool zLocationStatus = false;

void setup() {

  servo1.attach(8);//left
  servo2.attach(9);
  servo3.attach(10);//second joint

  
  stepper1.setMaxSpeed(10000);
  stepper1.setAcceleration(1000);
  stepper2.setMaxSpeed(10000);
  stepper2.setAcceleration(10000);

  Serial.begin(9600);
  int xPosition;
  
}
/*
bool move() {
  int movement=5000;
  stepper1.move(movement);
  stepper1.runToPosition();
  delay(1000);
  stepper1.move(-movement);
  stepper1.runToPosition();
  delay(1000);
  arjun = false;
  return = arjun;

}
*/

//400 steps equals 1 cm
void loop() {
      servo1.write(0);
      servo3.write(0);
      int angle2 = 180-0;
      servo2.write(angle2);

  int xPosition = int(xpos());

  stepper1.move(-xPosition*400);
  stepper1.runToPosition();

  int yPosition = int(ypos());
  int zPosition = int(zpos());

  int angle = atan(yPosition/zPosition)*180/3.14;

  int target = map(angle, 0,90,0,16);

  int movement=4000;
  int iteration = 10;
  for(int i=0;i<=iteration;i++){
    stepper2.move(-movement);
    stepper2.runToPosition();
    //delay(2000);
    }
    
    for(int angle = 0; angle<=90;angle++){
      servo1.write(angle);
      servo3.write(angle);
      int angle2 = 180-angle;
      servo2.write(angle2);
      delay(15);
    }
    delay(5000);
    for(int angle = 90; angle>=0;angle--){
      servo1.write(angle);
      servo3.write(angle);
      int angle2 = 180-angle;
      servo2.write(angle2);
      delay(15);
    }

      for(int i=0;i<=iteration;i++){
        stepper2.move(movement);
        stepper2.runToPosition();
        //delay(2000);
    }

  stepper1.move(xPosition*400);
  stepper1.runToPosition();
 
/*
 * 
 *  delay(5000);
    for(int i=0;i<=iteration;i++){
    stepper2.move(movement);
    stepper2.runToPosition();
    delay(200);

    
  servo1.write(90);
  servo2.write(90);
  servo3.write(90);

  stepper2.move(5000);
  stepper2.runToPosition();
  
*/


/*  if(!xLocationStatus){
    xPosition = xpos();
    Serial.print("The system will move to X: ");
    Serial.println(xPosition);
    xLocationStatus = true;
  }

   if(!yLocationStatus){
    int yPosition = ypos();
    Serial.print("The system will move to Y: ");
    Serial.println(yPosition);
    yLocationStatus = true;
  }

  if(!zLocationStatus){
    int zPosition = zpos();
    Serial.print("The system will move to Z: ");
    Serial.println(zPosition);
    zLocationStatus = true;
  }
*/
/*
 int xPosition = 20;
  stepper1.move(xPosition*400);
  stepper1.runToPosition();
  delay(1000);
  stepper1.move(-xPosition*400);
  stepper1.runToPosition();
*/

/*
 int yPosition= ypos();
  int zPosition = zpos();
  int targetAngle = atan(yPosition/zPosition)*180/3.1415;
for(int angle = 0; angle<=targetAngle;angle++){
    servo1.write(angle);
    int angle2 = 180-angle;
    servo2.write(angle2);
    servo3.write(angle);
    delay(15);
}

delay(2000);
*/

/*
 
  
 
 //-----------------------------------
int movement=4000;
      int iteration = 16;
      for(int i=0;i<=iteration;i++){
        stepper2.move(-movement);
        stepper2.runToPosition();
        delay(200);
        }
        delay(5000);
        for(int i=0;i<=iteration;i++){
        stepper2.move(movement);
        stepper2.runToPosition();
        delay(200);
        }

 //-----------------------------------
/*

  for(int angle = 0; angle<=180;angle++){
    servo1.write(angle);
    servo3.write(angle);
    int angle2 = 180-angle;
    servo2.write(angle2);
    delay(15);
    if(angle==90){
      delay(2000);
      int movement=10000;
      int iteration = 5;
      for(int i=0;i<=iteration;i++){
        stepper2.move(-movement);
        stepper2.runToPosition();
        //delay(1000);
        if (i==iteration){
          for(int i=0;i<=iteration;i++){
            stepper2.move(movement);
            stepper2.runToPosition();
            }
            }
            }
            }
            if (angle ==0){
              delay(2000);
            }if (angle ==180){
              delay(2000);
            }
            
  }
  */ 

}

int xpos() {
  // Ask for the X position
  Serial.println("Please enter the X position:");
  // Wait until data is available to read from the Serial Monitor
  while (Serial.available() == 0) {
  }
  // Read the input from the Serial Monitor
  String input = Serial.readStringUntil('\n');
  int xPos = 0;

  for (int i = 0; i < input.length(); i++) {
    if (isdigit(input[i])) {
      xPos = xPos * 10 + (input[i] - '0');
    }
  }
  return xPos;
}

int ypos() {
  // Ask for the X position
  Serial.println("Please enter the Y position:");
  // Wait until data is available to read from the Serial Monitor
  while (Serial.available() == 0) {
  }
  // Read the input from the Serial Monitor
  String input = Serial.readStringUntil('\n');
  int yPos = 0;
  
  for (int i = 0; i < input.length(); i++) {
    if (isdigit(input[i])) {
      yPos = yPos * 10 + (input[i] - '0');
    }
  }
  return yPos;
}

int zpos() {
  // Ask for the X position
  Serial.println("Please enter the Z position:");
  // Wait until data is available to read from the Serial Monitor
  while (Serial.available() == 0) {
  }
  // Read the input from the Serial Monitor
  String input = Serial.readStringUntil('\n');
  int zPos = 0;
  
  for (int i = 0; i < input.length(); i++) {
    if (isdigit(input[i])) {
      zPos = zPos * 10 + (input[i] - '0');
    }
  }
  return zPos;
}
